local Players = game:GetService("Players")
local Rayfield = loadstring(game:HttpGet('https://sirius.menu/rayfield'))()

local Window = Rayfield:CreateWindow({
    Name = "Jailbreak ",
    Icon = 0,
    LoadingTitle = "JB Stalker",
    LoadingSubtitle = "by zcp0",
    Theme = "Default",
    DisableRayfieldPrompts = false,
    DisableBuildWarnings = false,
    ConfigurationSaving = {
        Enabled = true,
        FolderName = nil,
        FileName = "Main"
    },
    Discord = {
        Enabled = false,
        Invite = "noinvitelink",
        RememberJoins = true
    },
    KeySystem = false,
    KeySettings = {
        Title = "Untitled",
        Subtitle = "Key System",
        Note = "No method of obtaining the key is provided",
        FileName = "Key",
        SaveKey = true,
        GrabKeyFromSite = false,
        Key = {"Hello"}
    }
})

-- Main Tab Creation
local MainTab = Window:CreateTab("üè† Home", nil) -- Title, Image
local MainSection = MainTab:CreateSection("Spectating")

-- Placeholder for PlayerDropdown
local PlayerDropdown

-- Function to refresh the player list and recreate the dropdown
local function refreshPlayerList()
    local playerNames = {}
    for _, player in ipairs(Players:GetPlayers()) do
        table.insert(playerNames, player.Name)
    end

    -- Remove the old dropdown if it exists
    if PlayerDropdown then
        PlayerDropdown:Destroy() -- Destroy the previous dropdown
    end

    -- Create a new dropdown with updated player list
    PlayerDropdown = MainTab:CreateDropdown({
        Name = "Player List",
        Options = playerNames, -- Updated list of player names
        CurrentOption = {}, -- No selection initially
        MultipleOptions = false,
        Flag = "PlayerListDropdown", -- Unique flag for the dropdown
        Callback = function(selectedOption)
            if selectedOption[1] then
                print("Selected player:", selectedOption[1])
                -- Add logic for what happens when a player is selected
            end
        end,
    })

    print("Player list refreshed!")
end

-- Create the Refresh Button to refresh the player list
local RefreshButton = MainTab:CreateButton({
    Name = "Refresh Player List",
    Callback = refreshPlayerList,
})

-- Refresh the player list on script execution
refreshPlayerList()
